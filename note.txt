
* Models
  #Genre
    name          -required
    description
    movies: list of movies to be reverse populate base on the genre _id save on the moviegenre type. to mentioned on the Schema only during the reverse population



  #Movie
    title
    genre - reference of  genre model   - required
    numberInStock                       -required  -to be recalculate on RentalOut/In
    numberOutStock                       -default=0       -to be recalculate on RentalOut/In 
    dailyRentalRate                     -required  
    description


  #Customer
  name
  membership   -['student','standard','premium']  - if student then the rentalFee is -5%,
                                                  - if premium rentalFee -15%
  phone
  email      - email link with the user if the same customer is registered as user
  address
  location    - to be added via middleware from the address provided from the customer
  takenMovie  -[RentalOut,RentalOut] : Array of rental out movies


  #User
    name
    email
    password
    role = ['customer','staff','admin']
    customer  - customer id if the login user is registered as customer


#RentalOut
    customer                      - reference of customer model
    movie                         - reference of movie model
    dateOut                       - date is out
             -rentalFee :
             - to be calculated & created base on customer membership from front-end
    dateExpectedIn                - date to return the movie provided from front-end 
                                  - base on he rentalFee 



  #ReturnIn
    RentalOut  - ObjectId
    dateIn     -date of the return      
    fined      - to be calculated base on maxTimeOut



















